@page "/ProductPage/{productId}"
@using Blazored.LocalStorage
@using Yrhacks2023.Shared.Data
@inject HttpClient HttpClient
@inject ILocalStorageService Lss

<PageTitle>Shop/BASEL</PageTitle>
<PageHeader/>

<div class="page-content">
    <div class="product-details">
        <div class="product-image-section">
            <img class="product-image" src="baselsquishy2.png">
        </div>
        <div class="product-info-section">
            <h2 class="product-name">PRODUCT NAME</h2>
            <p class="seller-username">Seller name</p>
            <br>
            <p class="product-price">@($"{_price:F2}")</p>
            <p class="product-type">@(_type.ToUserString())</p>
            <p class="product-condition new">New</p>
            <br>
            <p class="product-description">@_description</p>

            <div class="small-gap"></div>
            <button class="list-button" onClick="">Add to List</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ulong productId { get; set; }

    private string _name;
    private decimal _price;
    private string _seller;
    private ItemType _type;
    private string _description;

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage msg = await HttpClient.GetAsync($"/api/buildList/getId/{productId}");
        Product? product = await msg.Content.ReadFromJsonAsync<Product>();
        if (product == null)
            
        // update fields
        _name = product.Name;
        _price = product.Price;
        _seller = product.Seller;
        _type = product.Type;
        _description = product.Description;
        StateHasChanged();
    }

}